1. 프로그래밍 아이디어 설명
2. 손으로 쓴 프로그램 소스 리스트 및 소스 설명

--
1. 프로그래밍 아이디어 설명

이번 과제 중 2번부터 4번까지의 소스코드는 입력된 string이 {a,b,c}라는 알파벳을 사용해서 만들어진 것인지, 아닌지 검사하는 에러 검사 기능이 들어있다. 만약에 {a,b,c}이외의 문자열이 사용되었다면 에러를 띄우고 다시 입력받는다. 
입력된 string안에 짝수개의 'a'가 들어있는지, 그렇지 않은지 검사하는 프로그램인데, 간단하게, 입력된 스트링의 처음부터 끝까지 'a'의 개수를 세어서 2로 나눠서 나머지가 0이면 accept이고, 그렇지 않으면 reject하는 프로그램이다. 


2. 손으로 쓴 프로그램 소스 리스트 및 소스 설명

#include <stdio.h>
#include <string.h>

중요한 main()함수부터 설명하려고 한다 : 
int main(void)
{
    char input_str[10000]={0};
    unsigned int no_a = 0;
-> 메인함수는 명령줄 인자를 받지 않아 매개변수가 void이다.
-> input_str[]이 최대로 받을 수 있는 문자의 개수는 10000개이다. 동적할당을 하고싶었으나, 사용자가 어느정도의 길이를 입력할지 예측할 수 없기 때문에 10000으로 할수밖에 없었다.
'a'의 개수가 음수일리는 없으므로, unsigned int로 선언했다. no_a는 입력된 문자열 input_str[]안의 'a'의 개수를 세는 정수형 변수이다. 

    /* Ctrl + D = EOF in Linux system. */
    while(fgets(input_str, sizeof(input_str), stdin) != NULL)
    {
-> 입력 함수로 앱실론을 위해서 공백도 입력받을 수 있는 fgets()함수를 사용했다. 표준 입력기(stdin)에서 Ctrl+D를 입력받으면, 즉 파일의 끝(EOF)이라는 시그널을 받으면 while()무한 루프를 빠져나올 수 있도록 코드를 작성하였다. 


	/* 문자열에서 fgets로 입력된 개행문자 제거 */
	input_str[strlen(input_str)-1] = input_str[strlen(input_str)];

	if(error_check(input_str)) {
	    continue;
	}
-> (오른쪽 글쓰기) 입력받은 문자열이 알파벳 {a,b,c}로 구성되어있지 않다면 에러메시지를 출력하고, 새로 입력받는다.

	if(read_n_check(input_str)%2 == 0) {
	    printf("accept: %s\n", input_str);
	}
	else {    
	    printf("reject: %s\n", input_str);
	}
-> (오른쪽 글쓰기) 만약 input_str의 'a'의 개수가 2로 나누어 떨어지면 accept, 그렇지 않다면 reject이다.

	fflush(stdin);
-> (오른쪽 글쓰기) 표준 입력 버퍼를 비워준다.
    }

    return 0;
}


read_n_check()함수에서는 입력받은 문자열의 'a'의 개수를 리턴한다 : 
int read_n_check(char* tobe)
{
    unsigned int no_a=0;

    for(int offset=0; offset<strlen(tobe); offset++){
	if(tobe[offset] == 'a') {
	    no_a++;
	}
-> (오른쪽 글쓰기) 만약 입력받은 문자열에서 어떤 위치(offset)에 있는 문자가 'a'와 같다면, no_a를 증가시킨다.
    }

    return no_a;
-> (오른쪽 글쓰기) no_a를 리턴한다.
}


입력받은 문자열이 Language안에 속하는지 아닌지 체크한다 :
int error_check(char* isit_L)
{
    char acc[4]={97,98,99,10};
-> 허용되는 문자의 아스키코드를 나타낸다. 왼쪽부터 'a', 'b', 'c', '\r'을 나타낸다.
    int ch;

    // 엡실론
    if(isit_L[0] == ' ' && strlen(isit_L) == 1) {
	return 0;
    }
-> 문자열의 길이는 1인데, 첫번째 글자가 공백이면 이것은 앱실론이다.

    else {
	for(int offset=0; offset<strlen(isit_L); offset++){
-> 바깥쪽 for문이 있는 이유는 표준 입력으로 받은 문자열의 처음부터 끝까지 한문자씩 검사하기 위함이다.
	    ch=0;
	    for(int alp=0; alp<4; alp++){
		if(isit_L[offset] == acc[alp]) {
		    ch++;
		}
	    }
-> 안쪽의 for문이 있는 이유는 입력된 문자열의 각각의 문자가 acc[4]에 들어있는 허용되는 문자 중 하나인지 검사하기 위함이다.
	    if(ch == 0){
		error_message();
		return 1;
	    }
-> 만약 입력받은 어떤 문자열에서 단 하나의 문자라도 허용되는 알파벳이나 줄바꿈 문자('\r')이외의 것이 검사되었다면 
이 문자열은 Language에 속하지 않으니, 에러 메시지를 출력하고 1(True)이라는 값을 리턴해 함수를 빠져나간다.
	}
    }
    return 0;
}


Language에 속하지 않은 string을 발견했을 때 출력해주는 문장을 담고있는 함수이다 : 
void error_message(void)
{
    printf("이 문자열에는  Σ={a,b,c} 이외의 알파벳이 포함되어 있습니다.\n");
    printf("다시 입력해주세요.\n");
}
